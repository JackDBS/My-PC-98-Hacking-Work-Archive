(mes
 (meta (engine 'AI5) (charset "pc98") (dictbase 128))
 (dict)
 (define-proc 0
   (<>
    (set-arr~ @ 1 32768)
    (set-arr~ @ 7 0)
    (set-arr~ @ 9 (// (~ @ 9) 1))
    (set-arr~ @ 6 0)
    (image "m_waku1.pd8")
    (cond
     ((== A 1) (<> (image "face01.pd8")))
     ((== A 2) (<> (image "face02.pd8")))
     ((== A 3) (<> (image "face03.pd8")))
     ((== A 4) (<> (image "face04.pd8")))
     ((== A 5) (<> (image "face05.pd8")))
     ((== A 6) (<> (image "face06.pd8")))
     ((== A 7) (<> (image "face07.pd8")))
     ((== A 8) (<> (image "face08.pd8")))
     ((== A 9) (<> (image "face09.pd8")))
     ((== A 10) (<> (image "face10.pd8")))
     ((== A 11) (<> (image "face11.pd8")))
     ((== A 12) (<> (image "face12.pd8")))
     ((== A 13) (<> (image "face13.pd8")))
     ((== A 14) (<> (image "face14.pd8")))
     ((== A 15) (<> (image "face15.pd8")))
     ((== A 16) (<> (image "face16.pd8")))
     ((== A 17) (<> (image "face17.pd8")))
     ((== A 18) (<> (image "face18.pd8")))
     ((== A 19) (<> (image "face19.pd8")))
     ((== A 20) (<> (image "face20.pd8")))
     ((== A 21) (<> (image "face21.pd8")))
     ((== A 22) (<> (image "face22.pd8")))
     ((== A 23) (<> (image "face23.pd8")))
     ((== A 24) (<> (image "face24.pd8")))
     ((== A 25) (<> (image "face25.pd8")))
     ((== A 26) (<> (image "face26.pd8")))
     ((== A 27) (<> (image "face27.pd8")))
     ((== A 28) (<> (image "face28.pd8")))
     ((== A 29) (<> (image "face29.pd8")))
     ((== A 30) (<> (image "face30.pd8")))
     ((== A 31) (<> (image "face31.pd8")))
     ((== A 32) (<> (image "face32.pd8")))
     ((== A 33) (<> (image "face33.pd8")))
     ((== A 34) (<> (image "face34.pd8")))
     ((== A 35) (<> (image "face35.pd8")))
     (else (<> (image "face35.pd8"))))
    (set-arr~ @ 9 (&& (~ @ 9) 65534))
    (set-arr~ @ 7 1)
    (set-arr~ @ 20 (+ (&& (~ @ 20) 65280) 0))
    (set-arr~ @ 21 (+ 512 16))
    (set-arr~ @ 20 (// (&& (~ @ 20) 65399) 128))
    (set-arr~ @ 13 27 75 68 170)
    (color 8)
    (clear)
    (set-arr~ @ 1 4096)))
 (define-proc 1
   (<>
    (set-arr~ @ 1 32768)
    (set-arr~ @ 7 0)
    (set-arr~ @ 9 (// (~ @ 9) 1))
    (set-arr~ @ 6 0)
    (image "m_waku2.pd8")
    (set-arr~ @ 9 (&& (~ @ 9) 65534))
    (set-arr~ @ 7 1)
    (set-arr~ @ 20 (+ (&& (~ @ 20) 65280) 0))
    (set-arr~ @ 21 (+ 512 16))
    (set-arr~ @ 20 (// (&& (~ @ 20) 65399) 128))
    (set-arr~ @ 13 19 79 60 167)
    (color 8)
    (clear)
    (set-arr~ @ 1 4096)))
 (define-proc 3
   (<>
    (palette 3 0)
    (set-arr~ @ 7 0)
    (set-arr~ @ 13 0 0 79 399)
    (clear 0)
    (set-arr~ @ 9 (&& (~ @ 9) 65534))
    (set-arr~ @ 6 0)
    (set-arr~ @ 1 0)))
 (define-proc 4
   (<>
    (set-arr~ @ 1 4096)
    (set-arr~ @ 9 (// (~ @ 9) 1))
    (set-arr~ @ 13 4 312 75 (+ 312 (* 16 4)))
    (color 8)
    (set-arr~ @ 17 4 312)
    (set-arr~ @ 7 1)
    (palette 3)))
 (define-proc 5
   (<>
    (set-arr~ @ 1 4096)
    (set-arr~ @ 9 (// (~ @ 9) 1))
    (set-arr~ @ 13 4 312 75 (+ 312 (* 16 4)))
    (color 8)
    (set-arr~ @ 17 4 312)
    (set-arr~ @ 7 1)))
 (define-proc 6
   (<>
    (set-arr~ @ 7 0)
    (set-arr~ @ 9 (// (~ @ 9) 1))
    (set-arr~ @ 6 1)
    (set-arr~ @ 1 0)))
 (define-proc 7 (<> (set-arr~ @ 6 0) (set-arr~ @ 1 4096) (set-arr~ @ 7 1)))
 (define-proc 12
   (<>
    (set-arr~ @ 6 1)
    (set-var K (/ K 2))
    (color 16)
    (box 37 386 79 399)
    (if (> (/ K 8) 0) (<> (color 144) (box 37 386 (- (+ 37 (/ K 8)) 1) 399)))
    (if (!= K 0)
      (<>
       (blit-mask
        (- (+ 45 7) (% K 8))
        372
        (- (+ 45 7) (% K 8))
        385
        1
        (+ 37 (/ K 8))
        386
        1)))
    (blit 37 386 79 399 1 32 (+ 306 (* 3 18)) 0)))
 (define-proc 26
   (<>
    (set-arr~ @ 9 (// (~ @ 9) 8))
    (call (+ (~ @ 0) (* 86 2)))
    (set-arr~ @ 9 (&& (~ @ 9) 65527))))
 ((sys 32) 0 (<>))
 ((sys 32) 1 (<> (set-var C 0) (mes-call "camp.mes")))
 (if (== (: 1023) 1) (<> (set-var C 5) (mes-call "camp.mes")))
 (set-arr~ @ 9 (// (~ @ 9) 1))
 (set-arr~ @ 9 (// (~ @ 9) 4))
 (set-arr~ @ 7 1)
 (set-var I 0)
 (while (!= I 1024) (<> (set-reg:: I 0) (set-var I (+ I 1))))
 (set-arr~ @ 7 0)
 (set-var A (~ @ 0))
 (set-var I 0)
 (while (!= I 86) (<> (set-arr~ A I 0) (set-var I (+ I 1))))
 (set-arr~ A 71 25)
 (set-arr~ A 72 1)
 (set-arr~ A 73 1)
 (set-reg: 810 1)
 (set-reg: 818 1)
 (set-reg: 825 1)
 (set-reg: 830 1)
 (set-var A (~ @ 0))
 (set-arr~ A 26 84)
 (set-arr~ A 27 149)
 (set-arr~ A 28 116)
 (set-arr~ A 29 180)
 (set-arr~ @ 7 0)
 (set-var A (~ @ 0))
 (set-arr~ A 10 (~ A 12))
 (set-arr~ A 30 (~ A 32))
 (set-arr~ A 50 (~ A 52))
 (set-arr~ A 85 (+ 50 (? 50)))
 (palette 3 0)
 (set-arr~ @ 9 (&& (~ @ 9) 65534))
 (set-arr~ @ 7 1)
 (set-arr~ @ 1 4096)
 (set-arr~ @ 6 0)
 (image "waku.pd8")
 (set-arr~ @ 9 (// (~ @ 9) 1))
 (set-arr~ @ 6 1)
 (image "sento.pd8")
 (set-arr~ @ 6 2)
 (image "chara1.pd8")
 (set-var C 4)
 (mes-call "camp.mes")
 (set-arr~ @ 7 0)
 (set-var A (~ @ 0))
 (set-arr~ A 10 (~ A 12))
 (set-arr~ A 30 (~ A 32))
 (set-arr~ A 50 (~ A 52))
 (set-var C 2)
 (mes-call "camp.mes")
 (set-var C 6)
 (mes-call "camp.mes")
 (set-arr~ @ 7 1)
 (palette 3)
 (set-var N 0)
 (slot 1 3)
 (mes-jump "machi1.mes"))